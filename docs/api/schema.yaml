swagger: '2.0'
info:
  title: Nupe API
  description: "Projeto realizado pela F\xE1brica de Software para melhorar o atendimento\
    \ realizado pelo NUPE"
  contact:
    name: Luis Guerreiro
    url: https://linkedin.com/in/devguerreiro
    email: luiscvlh11@gmail.com
  version: v0.1.0
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  NUPE Authentication:
    flow: password
    tokenUrl: /oauth/token/
    type: oauth2
security:
  - NUPE Authentication: []
paths:
  /academic_education/:
    get:
      operationId: academic_education_list
      description: "retorna todas as forma\xE7\xF5es acad\xEAmicas do banco de dados.\
        \ RF.SIS.028, RF.SIS.029, RF.SIS.030, RF.SIS.031"
      parameters:
        - name: name
          in: query
          description: ''
          required: false
          type: string
        - name: grade_name
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/AcademicEducationList'
      tags:
        - academic_education
    post:
      operationId: academic_education_create
      description: "cadastra uma forma\xE7\xE3o acad\xEAmica no banco de dados. RF.SIS.027"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AcademicEducationCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/AcademicEducationCreate'
      tags:
        - academic_education
    parameters: []
  /academic_education/{id}/:
    get:
      operationId: academic_education_read
      description: "retorna uma forma\xE7\xE3o acad\xEAmica espec\xEDfica do banco\
        \ de dados"
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AcademicEducationDetail'
      tags:
        - academic_education
    patch:
      operationId: academic_education_partial_update
      description: "atualiza um ou mais atributos de uma forma\xE7\xE3o acad\xEAmica.\
        \ RF.SIS.032"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AcademicEducationCreate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AcademicEducationCreate'
      tags:
        - academic_education
    delete:
      operationId: academic_education_delete
      description: "exclui uma forma\xE7\xE3o acad\xEAmica do banco de dados. RF.SIS.033"
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - academic_education
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this academic education.
        required: true
        type: integer
  /account/:
    get:
      operationId: account_list
      description: retorna todas as contas do banco de dados. RF.SIS.005, RF.SIS.006,
        RF.SIS.007, RF.SIS.008
      parameters:
        - name: campus_name
          in: query
          description: ''
          required: false
          type: string
        - name: institution_name
          in: query
          description: ''
          required: false
          type: string
        - name: function
          in: query
          description: ''
          required: false
          type: string
        - name: sector
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/AccountList'
      tags:
        - account
    post:
      operationId: account_create
      description: cadastra uma conta no banco de dados. RF.SIS.004
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Account'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Account'
      tags:
        - account
    parameters: []
  /account/current/:
    get:
      operationId: account_current
      description: "retorna informa\xE7\xF5es sobre a conta logada atual"
      parameters:
        - name: campus_name
          in: query
          description: ''
          required: false
          type: string
        - name: institution_name
          in: query
          description: ''
          required: false
          type: string
        - name: function
          in: query
          description: ''
          required: false
          type: string
        - name: sector
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CurrentAccount'
      tags:
        - account
    parameters: []
  /account/{id}/:
    get:
      operationId: account_read
      description: retorna uma conta especifica do banco de dados
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AccountDetail'
      tags:
        - account
    patch:
      operationId: account_partial_update
      description: atualiza um ou mais atributos de uma conta. RF.SIS.003, RF.SIS.009
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Account'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Account'
      tags:
        - account
    delete:
      operationId: account_delete
      description: exclui uma conta do banco de dados. RF.SIS.010
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - account
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this account.
        required: true
        type: integer
  /attendance/:
    get:
      operationId: attendance_list
      description: |-
        retorna todas os atendimentos do banco de dados. RF.SIS.021, RF.SIS.022, RF.SIS.023, RF.SIS.026, RF.SIS.011,
        RF.SIS.012
      parameters:
        - name: student
          in: query
          description: ''
          required: false
          type: string
        - name: student_name
          in: query
          description: ''
          required: false
          type: string
        - name: student_last_name
          in: query
          description: ''
          required: false
          type: string
        - name: attendants
          in: query
          description: ''
          required: false
          type: string
        - name: attendant_name
          in: query
          description: ''
          required: false
          type: string
        - name: attendant_last_name
          in: query
          description: ''
          required: false
          type: string
        - name: status
          in: query
          description: ''
          required: false
          type: string
        - name: severity
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/AttendanceList'
      tags:
        - attendance
    post:
      operationId: attendance_create
      description: cadastra um atendimento no banco de dados. RF.SIS.020
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttendanceCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/AttendanceCreate'
      tags:
        - attendance
    parameters: []
  /attendance/my/:
    get:
      operationId: attendance_my
      description: "retorna todos os atendimentos realizados pelo usu\xE1rio atual"
      parameters:
        - name: student
          in: query
          description: ''
          required: false
          type: string
        - name: student_name
          in: query
          description: ''
          required: false
          type: string
        - name: student_last_name
          in: query
          description: ''
          required: false
          type: string
        - name: attendants
          in: query
          description: ''
          required: false
          type: string
        - name: attendant_name
          in: query
          description: ''
          required: false
          type: string
        - name: attendant_last_name
          in: query
          description: ''
          required: false
          type: string
        - name: status
          in: query
          description: ''
          required: false
          type: string
        - name: severity
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/MyAccountAttendance'
      tags:
        - attendance
    parameters: []
  /attendance/report/:
    get:
      operationId: attendance_report
      description: "retorna um relat\xF3rio completo de todos os atendimentos"
      parameters:
        - name: student
          in: query
          description: ''
          required: false
          type: string
        - name: student_name
          in: query
          description: ''
          required: false
          type: string
        - name: student_last_name
          in: query
          description: ''
          required: false
          type: string
        - name: attendants
          in: query
          description: ''
          required: false
          type: string
        - name: attendant_name
          in: query
          description: ''
          required: false
          type: string
        - name: attendant_last_name
          in: query
          description: ''
          required: false
          type: string
        - name: status
          in: query
          description: ''
          required: false
          type: string
        - name: severity
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AttendanceReport'
      tags:
        - attendance
    parameters: []
  /attendance/{id}/:
    get:
      operationId: attendance_read
      description: retorna um atendimento especifico do banco de dados
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AttendanceDetail'
      tags:
        - attendance
    patch:
      operationId: attendance_partial_update
      description: atualiza um ou mais atributos de um atendimento. RF.SIS.024
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttendanceCreate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AttendanceCreate'
      tags:
        - attendance
    delete:
      operationId: attendance_delete
      description: exclui um atendimento do banco de dados. RF.SIS.025
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - attendance
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this attendance.
        required: true
        type: integer
  /attendance_reason/:
    get:
      operationId: attendance_reason_list
      description: retorna todos os motivos de atendimento pai do banco de dados
      parameters:
        - name: father_reason
          in: query
          description: ''
          required: false
          type: number
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/AttendanceReason'
      tags:
        - attendance_reason
    post:
      operationId: attendance_reason_create
      description: cadastra um motivo de atendimento no banco de dados
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttendanceReason'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/AttendanceReason'
      tags:
        - attendance_reason
    parameters: []
  /attendance_reason/{id}/:
    get:
      operationId: attendance_reason_read
      description: retorna um motivo de atendimento especifico do banco de dados
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AttendanceReason'
      tags:
        - attendance_reason
    patch:
      operationId: attendance_reason_partial_update
      description: atualiza um ou mais atributos de um motivo de atendimento
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttendanceReason'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AttendanceReason'
      tags:
        - attendance_reason
    delete:
      operationId: attendance_reason_delete
      description: exclui um motivo de atendimento do banco de dados
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - attendance_reason
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this attendance reason.
        required: true
        type: integer
  /campus/:
    get:
      operationId: campus_list
      description: retorna todos os campi do banco de dados
      parameters:
        - name: address
          in: query
          description: ''
          required: false
          type: string
        - name: number
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/CampusList'
      tags:
        - campus
    post:
      operationId: campus_create
      description: cadastra um campus no banco de dados
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CampusCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/CampusCreate'
      tags:
        - campus
    parameters: []
  /campus/{id}/:
    get:
      operationId: campus_read
      description: retorna um campus especifico do banco de dados
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CampusDetail'
      tags:
        - campus
    patch:
      operationId: campus_partial_update
      description: atualiza um ou mais atributos de um campus
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CampusCreate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CampusCreate'
      tags:
        - campus
    delete:
      operationId: campus_delete
      description: exclui um campus do banco de dados
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - campus
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this campus.
        required: true
        type: integer
  /city/:
    get:
      operationId: city_list
      description: retorna todas as cidades do banco de dados
      parameters:
        - name: name
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/City'
      tags:
        - city
    parameters: []
  /city/{id}/:
    get:
      operationId: city_read
      description: retorna uma cidade especifica do banco de dados
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/City'
      tags:
        - city
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this city.
        required: true
        type: integer
  /function/:
    get:
      operationId: function_list
      description: "retorna todas as fun\xE7\xF5es/cargos do banco de dados"
      parameters:
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Function'
      tags:
        - function
    post:
      operationId: function_create
      description: "cadastra uma fun\xE7\xE3o/cargo no banco de dados"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Function'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Function'
      tags:
        - function
    parameters: []
  /function/{id}/:
    get:
      operationId: function_read
      description: "retorna uma fun\xE7\xE3o/cargo especifica do banco de dados"
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Function'
      tags:
        - function
    patch:
      operationId: function_partial_update
      description: "atualiza um ou mais atributos de uma fun\xE7\xE3o/cargo"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Function'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Function'
      tags:
        - function
    delete:
      operationId: function_delete
      description: "exclui uma fun\xE7\xE3o/cargo do banco de dados"
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - function
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this function.
        required: true
        type: integer
  /grade/:
    get:
      operationId: grade_list
      description: retorna todos os graus do banco de dados. RF.SIS.035, RF.SIS.036,
        RF.SIS.037, RF.SIS.038
      parameters:
        - name: name
          in: query
          description: ''
          required: false
          type: string
        - name: academic_education_name
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Grade'
      tags:
        - grade
    post:
      operationId: grade_create
      description: cadastra um grau no banco de dados. RF.SIS.034
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Grade'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Grade'
      tags:
        - grade
    parameters: []
  /grade/{id}/:
    get:
      operationId: grade_read
      description: retorna um grau especifico do banco de dados
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Grade'
      tags:
        - grade
    patch:
      operationId: grade_partial_update
      description: atualiza um ou mais atributos de um grau. RF.SIS.039
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Grade'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Grade'
      tags:
        - grade
    delete:
      operationId: grade_delete
      description: exclui um grau do banco de dados. RF.SIS.040
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - grade
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this grade.
        required: true
        type: integer
  /institution/:
    get:
      operationId: institution_list
      description: "retorna todas as institui\xE7\xF5es do banco de dados"
      parameters:
        - name: name
          in: query
          description: ''
          required: false
          type: string
        - name: campus_name
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Institution'
      tags:
        - institution
    post:
      operationId: institution_create
      description: "cadastra uma institui\xE7\xE3o no banco de dados"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Institution'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Institution'
      tags:
        - institution
    parameters: []
  /institution/{id}/:
    get:
      operationId: institution_read
      description: "retorna uma institui\xE7\xE3o especifica do banco de dados"
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Institution'
      tags:
        - institution
    patch:
      operationId: institution_partial_update
      description: "atualiza um ou mais atributos de uma institui\xE7\xE3o"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Institution'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Institution'
      tags:
        - institution
    delete:
      operationId: institution_delete
      description: "exclui uma institui\xE7\xE3o do banco de dados"
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - institution
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this institution.
        required: true
        type: integer
  /location/:
    get:
      operationId: location_list
      description: "retorna todas as localiza\xE7\xF5es do banco de dados"
      parameters:
        - name: city_name
          in: query
          description: ''
          required: false
          type: string
        - name: state_initials
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Location'
      tags:
        - location
    parameters: []
  /location/{id}/:
    get:
      operationId: location_read
      description: "retorna uma localiza\xE7\xE3o especifica do banco de dados"
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Location'
      tags:
        - location
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this location.
        required: true
        type: integer
  /person/:
    get:
      operationId: person_list
      description: retorna todas as pessoas do banco de dados
      parameters:
        - name: gender
          in: query
          description: ''
          required: false
          type: string
        - name: birthday_date
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/PersonList'
      tags:
        - person
    post:
      operationId: person_create
      description: cadastra uma pessoa no banco de dados
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PersonCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PersonCreate'
      tags:
        - person
    parameters: []
  /person/{cpf}/:
    get:
      operationId: person_read
      description: retorna uma pessoa especifica do banco de dados
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PersonDetail'
      tags:
        - person
    patch:
      operationId: person_partial_update
      description: atualiza um ou mais atributos de uma pessoa
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PersonCreate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PersonCreate'
      tags:
        - person
    delete:
      operationId: person_delete
      description: exclui uma pessoa do banco de dados
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - person
    parameters:
      - name: cpf
        in: path
        description: "Somente n\xFAmeros"
        required: true
        type: string
  /profile_image/:
    post:
      operationId: profile_image_create
      description: faz o upload da foto de perfil para o banco de dados
      parameters:
        - name: image
          in: formData
          required: true
          type: file
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ProfileImageCreate'
      consumes:
        - multipart/form-data
      tags:
        - profile_image
    parameters: []
  /profile_image/{attachment_id}/:
    delete:
      operationId: profile_image_delete
      description: remove a foto de perfil do banco de dados
      parameters: []
      responses:
        '204':
          description: ''
      consumes:
        - multipart/form-data
      tags:
        - profile_image
    parameters:
      - name: attachment_id
        in: path
        description: "Esse atributo \xE9 usado para fazer associa\xE7\xE3o com outro\
          \ objeto"
        required: true
        type: string
  /sector/:
    get:
      operationId: sector_list
      description: retorna todos os setores do banco de dados. RF.SIS.014, RF.SIS.015,
        RF.SIS.016, RF.SIS.019
      parameters:
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Sector'
      tags:
        - sector
    post:
      operationId: sector_create
      description: cadastra um setor no banco de dados. RF.SIS.013
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Sector'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Sector'
      tags:
        - sector
    parameters: []
  /sector/{id}/:
    get:
      operationId: sector_read
      description: retorna um setor especifico do banco de dados
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Sector'
      tags:
        - sector
    patch:
      operationId: sector_partial_update
      description: atualiza um ou mais atributos de um setor. RF.SIS.017
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Sector'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Sector'
      tags:
        - sector
    delete:
      operationId: sector_delete
      description: exclui um setor do banco de dados. RF.SIS.018
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - sector
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this sector.
        required: true
        type: integer
  /state/:
    get:
      operationId: state_list
      description: retorna todas os estados do banco de dados
      parameters:
        - name: initials
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/State'
      tags:
        - state
    parameters: []
  /state/{id}/:
    get:
      operationId: state_read
      description: retorna um estado especifico do banco de dados
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/State'
      tags:
        - state
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this state.
        required: true
        type: integer
  /student/:
    get:
      operationId: student_list
      description: retorna todos os estudantes do banco de dados. RF.SIS.042, RF.SIS.043,
        RF.SIS.044, RF.SIS.045
      parameters:
        - name: graduated
          in: query
          description: ''
          required: false
          type: string
        - name: ingress_date
          in: query
          description: ''
          required: false
          type: string
        - name: academic_education
          in: query
          description: ''
          required: false
          type: number
        - name: campus_name
          in: query
          description: ''
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/StudentList'
      tags:
        - student
    post:
      operationId: student_create
      description: cadastra um estudante no banco de dados. RF.SIS.041
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/StudentCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/StudentCreate'
      tags:
        - student
    parameters: []
  /student/{registration}/:
    get:
      operationId: student_read
      description: retorna um estudante especifico do banco de dados. RF.SIS.046,
        RF.SIS.047, RF.SIS.048
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StudentDetail'
      tags:
        - student
    patch:
      operationId: student_partial_update
      description: atualiza um ou mais atributos de um estudante. RF.SIS.049
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/StudentCreate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StudentCreate'
      tags:
        - student
    delete:
      operationId: student_delete
      description: exclui um estudante do banco de dados. RF.SIS.050
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - student
    parameters:
      - name: registration
        in: path
        required: true
        type: string
        pattern: ^[0-9]*$
definitions:
  Grade:
    title: Grade
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
  Institution:
    title: Institution
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
  CampusList:
    required:
      - name
      - institution
      - address
      - number
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
      institution:
        $ref: '#/definitions/Institution'
      address:
        title: Address
        type: string
        maxLength: 75
        minLength: 1
      number:
        title: Number
        type: string
        maxLength: 10
        minLength: 1
  AcademicEducationList:
    required:
      - name
      - grade
      - campi
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
      grade:
        $ref: '#/definitions/Grade'
      campi:
        type: array
        items:
          $ref: '#/definitions/CampusList'
  AcademicEducationCreate:
    required:
      - name
      - grade
      - campi
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
      grade:
        title: Grade
        type: integer
      campi:
        type: array
        items:
          type: integer
        uniqueItems: true
  Location:
    title: Location
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        readOnly: true
        minLength: 1
  CampusDetail:
    required:
      - name
      - cnpj
      - address
      - number
      - location
      - institution
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
      cnpj:
        title: Cnpj
        type: string
        maxLength: 18
        minLength: 1
      address:
        title: Address
        type: string
        maxLength: 75
        minLength: 1
      number:
        title: Number
        type: string
        maxLength: 10
        minLength: 1
      website:
        title: Website
        type: string
        maxLength: 50
        x-nullable: true
      location:
        $ref: '#/definitions/Location'
      institution:
        $ref: '#/definitions/Institution'
  AcademicEducationDetail:
    required:
      - name
      - grade
      - campi
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
      grade:
        $ref: '#/definitions/Grade'
      campi:
        type: array
        items:
          $ref: '#/definitions/CampusDetail'
  AccountList:
    required:
      - email
      - local_job
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      full_name:
        title: Full name
        type: string
        readOnly: true
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      local_job:
        title: Local job
        type: string
        minLength: 1
  Account:
    required:
      - email
      - person
      - function
      - sector
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      person:
        title: Person
        type: integer
      local_job:
        title: Local job
        type: integer
        x-nullable: true
      function:
        title: Function
        type: integer
      sector:
        title: Sector
        type: integer
  PersonDetail:
    title: Person
    required:
      - first_name
      - last_name
      - cpf
      - birthday_date
      - gender
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      first_name:
        title: First name
        type: string
        maxLength: 50
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 100
        minLength: 1
      cpf:
        title: Cpf
        description: "Somente n\xFAmeros"
        type: string
        maxLength: 14
        minLength: 1
      birthday_date:
        title: Birthday date
        type: string
        format: date
      gender:
        title: Gender
        type: string
        enum:
          - F
          - M
      contact:
        title: Contact
        description: "DDD+N\xFAmero"
        type: string
        pattern: ^[0-9]*$
        maxLength: 12
        minLength: 11
        x-nullable: true
      profile_image:
        title: Profile image
        type: string
        minLength: 1
  CurrentAccount:
    required:
      - email
      - person
      - local_job
      - function
      - sector
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      person:
        $ref: '#/definitions/PersonDetail'
      local_job:
        title: Local job
        type: string
        minLength: 1
      function:
        title: Function
        type: string
        minLength: 1
      sector:
        title: Sector
        type: string
        minLength: 1
      date_joined:
        title: Date joined
        type: string
        format: date
        readOnly: true
      is_active:
        title: Is active
        type: boolean
      is_staff:
        title: Is staff
        type: boolean
      is_superuser:
        title: "Status de superusu\xE1rio"
        description: "Indica que este usu\xE1rio tem todas as permiss\xF5es sem atribu\xED\
          -las explicitamente."
        type: boolean
  AccountDetail:
    required:
      - email
      - person
      - local_job
      - function
      - sector
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        minLength: 1
      person:
        $ref: '#/definitions/PersonDetail'
      local_job:
        title: Local job
        type: string
        minLength: 1
      function:
        title: Function
        type: string
        minLength: 1
      sector:
        title: Sector
        type: string
        minLength: 1
  StudentList:
    title: Student
    required:
      - registration
      - full_name
      - ingress_date
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      registration:
        title: Registration
        type: string
        pattern: ^[0-9]*$
        maxLength: 35
        minLength: 1
      full_name:
        title: Full name
        type: string
        minLength: 1
      ingress_date:
        title: Ingress date
        type: string
        format: date
      graduated:
        title: Graduated
        type: boolean
  AttendanceList:
    required:
      - attendants
      - student
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      attendants:
        type: array
        items:
          $ref: '#/definitions/AccountList'
      student:
        $ref: '#/definitions/StudentList'
      status:
        title: Status
        description: Aberto = O, Em Espero = OH, Em Andamento = IP, Fechado = C
        type: string
        enum:
          - O
          - OH
          - IP
          - C
  AttendanceCreate:
    required:
      - attendance_reason
      - attendance_severity
      - student
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      attendance_reason:
        title: Attendance reason
        type: integer
      attendance_severity:
        title: Attendance severity
        description: "Baixa = L, M\xE9dia = M, Alta = H, Grave = S"
        type: string
        enum:
          - L
          - M
          - H
          - S
      attendants:
        type: array
        items:
          type: integer
        uniqueItems: true
      student:
        title: Student
        type: integer
      status:
        title: Status
        description: Aberto = O, Em Espero = OH, Em Andamento = IP, Fechado = C
        type: string
        enum:
          - O
          - OH
          - IP
          - C
  PersonList:
    required:
      - cpf
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      full_name:
        title: Full name
        type: string
        readOnly: true
      cpf:
        title: Cpf
        description: "Somente n\xFAmeros"
        type: string
        maxLength: 14
        minLength: 1
      contact:
        title: Contact
        description: "DDD+N\xFAmero"
        type: string
        pattern: ^[0-9]*$
        maxLength: 12
        minLength: 11
        x-nullable: true
  StudentDetail:
    title: Student
    required:
      - registration
      - personal_info
      - responsibles
      - ingress_date
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      registration:
        title: Registration
        type: string
        pattern: ^[0-9]*$
        maxLength: 35
        minLength: 1
      personal_info:
        $ref: '#/definitions/PersonDetail'
      academic_education:
        title: Academic education
        type: string
        readOnly: true
      campus:
        $ref: '#/definitions/CampusDetail'
      academic_education_campus:
        title: Academic education campus
        type: integer
        x-nullable: true
      responsibles:
        type: array
        items:
          $ref: '#/definitions/PersonList'
      ingress_date:
        title: Ingress date
        type: string
        format: date
      graduated:
        title: Graduated
        type: boolean
  AttendanceDetail:
    title: Attendance
    required:
      - attendance_reason
      - attendance_severity
      - attendants
      - student
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      attendance_reason:
        title: Attendance reason
        type: string
        minLength: 1
      attendance_severity:
        title: Attendance severity
        description: "Baixa = L, M\xE9dia = M, Alta = H, Grave = S"
        type: string
        enum:
          - L
          - M
          - H
          - S
      attendants:
        type: array
        items:
          $ref: '#/definitions/AccountDetail'
      student:
        $ref: '#/definitions/StudentDetail'
      status:
        title: Status
        description: Aberto = O, Em Espero = OH, Em Andamento = IP, Fechado = C
        type: string
        enum:
          - O
          - OH
          - IP
          - C
      opened_at:
        title: Opened at
        type: string
        format: date-time
        readOnly: true
      closed_at:
        title: Closed at
        type: string
        format: date-time
        x-nullable: true
  MyAccountAttendance:
    required:
      - attendance
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      public_annotation:
        title: Public annotation
        type: string
        maxLength: '255'
        x-nullable: true
      private_annotation:
        title: Private annotation
        type: string
        maxLength: '255'
        x-nullable: true
      group_annotation:
        title: Group annotation
        type: string
        maxLength: '255'
        x-nullable: true
      attendance:
        $ref: '#/definitions/AttendanceDetail'
      attendance_at:
        title: Attendance at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
  AccountAttendance:
    required:
      - account
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      public_annotation:
        title: Public annotation
        type: string
        maxLength: '255'
        x-nullable: true
      account:
        $ref: '#/definitions/AccountDetail'
      attendance_at:
        title: Attendance at
        type: string
        format: date-time
        readOnly: true
      updated_at:
        title: Updated at
        type: string
        format: date-time
        readOnly: true
  AttendanceReport:
    required:
      - attendance_reason
      - attendance_severity
      - attendants
      - student
      - student_profile_image
      - student_age
      - account_attendance
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      attendance_reason:
        title: Attendance reason
        type: string
        minLength: 1
      attendance_severity:
        title: Attendance severity
        description: "Baixa = L, M\xE9dia = M, Alta = H, Grave = S"
        type: string
        enum:
          - L
          - M
          - H
          - S
      attendants:
        type: array
        items:
          $ref: '#/definitions/AccountDetail'
      student:
        $ref: '#/definitions/StudentDetail'
      student_profile_image:
        title: Student profile image
        type: string
        minLength: 1
      student_age:
        title: Student age
        type: string
        minLength: 1
      account_attendance:
        type: array
        items:
          $ref: '#/definitions/AccountAttendance'
      status:
        title: Status
        description: Aberto = O, Em Espero = OH, Em Andamento = IP, Fechado = C
        type: string
        enum:
          - O
          - OH
          - IP
          - C
      opened_at:
        title: Opened at
        type: string
        format: date-time
        readOnly: true
      closed_at:
        title: Closed at
        type: string
        format: date-time
        x-nullable: true
  AttendanceReason:
    required:
      - name
      - description
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
      description:
        title: Description
        type: string
        maxLength: 255
        minLength: 1
      father_reason:
        title: Father reason
        type: integer
        x-nullable: true
  CampusCreate:
    required:
      - name
      - cnpj
      - address
      - number
      - location
      - institution
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
      cnpj:
        title: Cnpj
        type: string
        maxLength: 18
        minLength: 1
      address:
        title: Address
        type: string
        maxLength: 75
        minLength: 1
      number:
        title: Number
        type: string
        maxLength: 10
        minLength: 1
      website:
        title: Website
        type: string
        maxLength: 50
        x-nullable: true
      location:
        title: Location
        type: integer
      institution:
        title: Institution
        type: integer
  City:
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
  Function:
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
      description:
        title: Description
        type: string
        maxLength: 150
        x-nullable: true
  PersonCreate:
    required:
      - first_name
      - last_name
      - cpf
      - birthday_date
      - gender
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      first_name:
        title: First name
        type: string
        maxLength: 50
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 100
        minLength: 1
      cpf:
        title: Cpf
        description: "Somente n\xFAmeros"
        type: string
        maxLength: 14
        minLength: 1
      birthday_date:
        title: Birthday date
        type: string
        format: date
      gender:
        title: Gender
        type: string
        enum:
          - F
          - M
      contact:
        title: Contact
        description: "DDD+N\xFAmero"
        type: string
        pattern: ^[0-9]*$
        maxLength: 12
        minLength: 11
        x-nullable: true
      profile_image:
        title: Profile image
        type: string
  ProfileImageCreate:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      image:
        title: Image
        type: string
        readOnly: true
        format: uri
      attachment_id:
        title: Attachment id
        description: "Esse atributo \xE9 usado para fazer associa\xE7\xE3o com outro\
          \ objeto"
        type: string
        readOnly: true
        minLength: 1
      uploaded_at:
        title: Uploaded at
        type: string
        format: date-time
        readOnly: true
  Sector:
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
      description:
        title: Description
        type: string
        maxLength: 150
        x-nullable: true
  State:
    required:
      - name
      - initials
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 50
        minLength: 1
      initials:
        title: Initials
        type: string
        maxLength: 2
        minLength: 1
  StudentCreate:
    required:
      - registration
      - person
      - academic_education_campus
      - ingress_date
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      registration:
        title: Registration
        type: string
        pattern: ^[0-9]*$
        maxLength: 35
        minLength: 1
      person:
        title: Person
        type: integer
      academic_education_campus:
        title: Academic education campus
        type: integer
      responsibles:
        type: array
        items:
          type: integer
        uniqueItems: true
      ingress_date:
        title: Ingress date
        type: string
        format: date
